syntax = "proto3";

package internal.app.transport.grpc.api.scaffold.v1.user;

option go_package = "go-scaffold/internal/app/transport/grpc/api/scaffold/v1/user;user";

service User {
  rpc Create (CreateRequest) returns (CreateResponse) {};
  rpc Update (UpdateRequest) returns (UpdateResponse) {};
  rpc Delete (DeleteRequest) returns (DeleteResponse) {};
  rpc Detail (DetailRequest) returns (DetailResponse) {};
  rpc List (ListRequest) returns (ListResponse) {};
}

message CreateRequest {
  string name = 1;  // @gotags: json:"name"
  int32 age = 2;    // @gotags: json:"age"
  string phone = 3; // @gotags: json:"phone"
}
message CreateResponse {}

message UpdateRequest {
  uint64 id = 1;    // @gotags: json:"id"   
  string name = 2;  // @gotags: json:"name"
  int32 age = 3;    // @gotags: json:"age"
  string phone = 4; // @gotags: json:"phone"
}
message UpdateResponse {}

message DeleteRequest {
  uint64 id = 1; // @gotags: json:"id"
}
message DeleteResponse {}

message DetailRequest {
  uint64 id = 1; // @gotags: json:"id"
}
message DetailResponse {
  uint64 id = 1;    // @gotags: json:"id"
  string name = 2;  // @gotags: json:"name"
  int32 age = 3;    // @gotags: json:"age"
  string phone = 4; // @gotags: json:"phone"
}

message ListRequest {
  string keyword = 1; // @gotags: json:"keyword"
}

message ListItem {
  uint64 id = 1;    // @gotags: json:"id"
  string name = 2;  // @gotags: json:"name"
  int32 age = 3;    // @gotags: json:"age"
  string phone = 4; // @gotags: json:"phone"
}

message ListResponse {
  repeated ListItem items = 1; // @gotags: json:"items"
}